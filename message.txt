local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- ====== MENU GUI ======
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomMenuGUI"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Nút nhỏ mở menu
local toggleButton = Instance.new("ImageButton")
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0.5, -25, 0.5, -25)
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleButton.Image = "rbxassetid://125193097642816"
toggleButton.ImageRectOffset = Vector2.new(4, 836)
toggleButton.ImageRectSize = Vector2.new(36, 36)
toggleButton.Parent = screenGui

local btnCorner = Instance.new("UICorner")
btnCorner.CornerRadius = UDim.new(0, 8)
btnCorner.Parent = toggleButton

-- Menu chính
local menuFrame = Instance.new("Frame")
menuFrame.Size = UDim2.new(0, 220, 0, 180)
menuFrame.Position = UDim2.new(0.5, -110, 0.5, -90)
menuFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
menuFrame.Visible = false
menuFrame.Parent = screenGui

local menuCorner = Instance.new("UICorner")
menuCorner.CornerRadius = UDim.new(0, 12)
menuCorner.Parent = menuFrame

local UIStroke = Instance.new("UIStroke")
UIStroke.Thickness = 2
UIStroke.Color = Color3.fromRGB(120, 0, 255)
UIStroke.Parent = menuFrame

-- Tiêu đề (dùng kéo menu)
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 35)
title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
title.Text = "Sì Trây"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 16
title.Font = Enum.Font.SourceSansBold
title.Parent = menuFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = title

-- Toggle menu
local open = false
toggleButton.MouseButton1Click:Connect(function()
    open = not open
    menuFrame.Visible = open
end)

-- Drag nút nhỏ
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    toggleButton.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end
toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = toggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
toggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then update(input) end
end)

-- Drag menu qua tiêu đề
local menuDragging, menuDragInput, menuDragStart, menuStartPos
local function updateMenu(input)
    local delta = input.Position - menuDragStart
    menuFrame.Position = UDim2.new(
        menuStartPos.X.Scale, menuStartPos.X.Offset + delta.X,
        menuStartPos.Y.Scale, menuStartPos.Y.Offset + delta.Y
    )
end
title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        menuDragging = true
        menuDragStart = input.Position
        menuStartPos = menuFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then menuDragging = false end
        end)
    end
end)
title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        menuDragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == menuDragInput and menuDragging then updateMenu(input) end
end)

-- ====== FARM (AutoFarm) ======
local farming = false

local function getCoins()
    for _, map in pairs(workspace:GetChildren()) do
        if map:FindFirstChild("CoinContainer") then
            return map.CoinContainer
        end
    end
end

local function findNearestCoin()
    local character = LocalPlayer.Character
    if not character then return nil end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end
    local container = getCoins()
    if not container then return nil end

    local nearest, dist = nil, math.huge
    for _, coin in pairs(container:GetChildren()) do
        if coin:IsA("BasePart") and coin.Parent and coin:IsDescendantOf(workspace) then
            local d = (hrp.Position - coin.Position).Magnitude
            if d < dist then
                dist = d
                nearest = coin
            end
        end
    end
    return nearest
end

local function moveToCoin(coin)
    local character = LocalPlayer.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp or not coin or not coin.Parent then return end

    local distance = (hrp.Position - coin.Position).Magnitude
    local speed = 15
    local time = math.clamp(distance / speed, 0.5, 10)

    local tween = TweenService:Create(hrp, TweenInfo.new(time, Enum.EasingStyle.Linear), {CFrame = coin.CFrame + Vector3.new(0,3,0)})
    local finished = false
    tween.Completed:Connect(function()
        finished = true
        if coin and coin.Parent then
            coin:Destroy()
        end
    end)
    tween:Play()

    repeat task.wait() until finished
end

local function autoFarm()
    while farming do
        local coin = findNearestCoin()
        if coin then
            moveToCoin(coin)
        else
            task.wait(0.1)
        end
    end
end

-- ====== Toggle Farm (Switch đẹp) ======
local farmLabel = Instance.new("TextLabel")
farmLabel.Size = UDim2.new(0.6, 0, 0, 30)
farmLabel.Position = UDim2.new(0, 10, 0, 60)
farmLabel.BackgroundTransparency = 1
farmLabel.Text = "Coin Farm"
farmLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
farmLabel.Font = Enum.Font.Gotham
farmLabel.TextSize = 16
farmLabel.TextXAlignment = Enum.TextXAlignment.Left
farmLabel.Parent = menuFrame

local toggleFrame = Instance.new("Frame")
toggleFrame.Size = UDim2.new(0, 50, 0, 25)
toggleFrame.Position = UDim2.new(1, -60, 0, 60)
toggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
toggleFrame.Parent = menuFrame
toggleFrame.BorderSizePixel = 0

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(1, 0)
corner.Parent = toggleFrame

local knob = Instance.new("Frame")
knob.Size = UDim2.new(0, 21, 0, 21)
knob.Position = UDim2.new(0, 2, 0, 2)
knob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
knob.Parent = toggleFrame
knob.BorderSizePixel = 0

local knobCorner = Instance.new("UICorner")
knobCorner.CornerRadius = UDim.new(1, 0)
knobCorner.Parent = knob

local toggleStroke = Instance.new("UIStroke")
toggleStroke.Thickness = 1.5
toggleStroke.Color = Color3.fromRGB(150, 80, 255)
toggleStroke.Transparency = 0.3
toggleStroke.Parent = toggleFrame

-- Function đổi trạng thái toggle
local function setToggle(state)
    if state then
        TweenService:Create(toggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(150, 80, 255)}):Play()
        TweenService:Create(knob, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {Position = UDim2.new(1, -23, 0, 2), BackgroundColor3 = Color3.fromRGB(255,255,255)}):Play()
    else
        TweenService:Create(toggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(60, 60, 80)}):Play()
        TweenService:Create(knob, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {Position = UDim2.new(0, 2, 0, 2), BackgroundColor3 = Color3.fromRGB(200,200,200)}):Play()
    end
end

-- Click toggle
toggleFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        farming = not farming
        setToggle(farming)
        if farming then
            task.spawn(autoFarm)
        end
    end
end)

setToggle(true) --(On)
farming = true
task.spawn(autoFarm)


-- ====== Coin Counter GUI (gắn vào menuFrame) ======
_G.TotalCoinsFarmed = _G.TotalCoinsFarmed or 0

local function setupCoinGUI()
    local label = menuFrame:FindFirstChild("CoinLabel")
    if not label then
        label = Instance.new("TextLabel")
        label.Name = "CoinLabel"
        label.Size = UDim2.new(1, -20, 0, 30)
        label.Position = UDim2.new(0, 10, 0, 100)
        label.BackgroundColor3 = Color3.fromRGB(30,30,30)
        label.BackgroundTransparency = 0.2
        label.TextColor3 = Color3.fromRGB(255,255,0)
        label.TextSize = 16
        label.Font = Enum.Font.SourceSansBold
        label.Text = "Coins: 0/40 | Total: 0"
        label.Parent = menuFrame
    end
    return label
end

local function hookGameCoinLabel(label)
    local coinLabel = LocalPlayer:WaitForChild("PlayerGui")
        :WaitForChild("MainGUI")
        :WaitForChild("Lobby")
        :WaitForChild("Dock")
        :WaitForChild("CoinBags")
        :WaitForChild("Container")
        :WaitForChild("BeachBall")
        :WaitForChild("CurrencyFrame")
        :WaitForChild("Icon")
        :WaitForChild("Coins")

    local lastAmount = tonumber(coinLabel.Text) or 0

    local function updateCoins()
        local amount = tonumber(coinLabel.Text) or 0
        if amount > lastAmount then
            _G.TotalCoinsFarmed += (amount - lastAmount)
        end
        lastAmount = amount

        label.Text = "Coins: " .. amount .. "/40 | Total: " .. _G.TotalCoinsFarmed

        if amount >= 40 then
            label.TextColor3 = Color3.fromRGB(255,0,0)
            label.Text = "FULL! ("..amount.."/40) | Total: " .. _G.TotalCoinsFarmed .. " - Resetting..."
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then humanoid.Health = 0 end
        else
            label.TextColor3 = Color3.fromRGB(0,255,0)
        end
    end

    updateCoins()
    coinLabel:GetPropertyChangedSignal("Text"):Connect(updateCoins)
end

local coinLabelUI = setupCoinGUI()
hookGameCoinLabel(coinLabelUI)

-- 🌟 Thêm sau phần hookGameCoinLabel(coinLabelUI)
-- (Dán ngay bên dưới dòng “hookGameCoinLabel(coinLabelUI)”)
------------------------------------------------------

-- 🌟 Thêm sau phần hookGameCoinLabel(coinLabelUI)
------------------------------------------------------

-- ====== TIMER GUI ======
local startTime = tick()  -- Ghi thời điểm bật script
local timerLabel = Instance.new("TextLabel")
timerLabel.Name = "TimerLabel"
timerLabel.Size = UDim2.new(1, -20, 0, 30)
timerLabel.Position = UDim2.new(0, 10, 0, 135)
timerLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
timerLabel.BackgroundTransparency = 0.2
timerLabel.TextColor3 = Color3.fromRGB(0, 200, 255)
timerLabel.TextSize = 16
timerLabel.Font = Enum.Font.SourceSansBold
timerLabel.Text = "Time: 00:00:00"
timerLabel.Parent = menuFrame

-- Hàm cập nhật thời gian dạng HH.MM.SS
task.spawn(function()
    while task.wait(1) do
        local elapsed = tick() - startTime
        local hours = math.floor(elapsed / 3600)
        local minutes = math.floor((elapsed % 3600) / 60)
        local seconds = math.floor(elapsed % 60)
        timerLabel.Text = string.format("Time: %02d:%02d:%02d", hours, minutes, seconds)
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    local label = setupCoinGUI()
    hookGameCoinLabel(label)
end)

